{"mappings":"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","sources":["src/index.ts","src/debugGrid.tsx","src/theme/index.ts","src/theme/functions.ts","src/theme/colors.ts"],"sourcesContent":["export * from \"./debugGrid\";          // export your DebugGrid component\nexport * from \"./theme\";              // export your color utilities, etc.","import gsap from \"gsap\";\nimport { useGSAP } from \"@gsap/react\";\nimport { Draggable as GSAPDraggable } from \"gsap/dist/Draggable\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { $breakPoint, $color, $cssTRBL, $uw } from \"./theme\";\n\n\ngsap.registerPlugin(GSAPDraggable);\n\nexport const DebugGrid: React.FC = () => {\n\tconst [gridHeight, setGridHeigth] = useState(3);\n\n\tconst [visible, setVisible] = useState(false);\n\tuseGSAP(() => {\n\t\tGSAPDraggable.create(\"#debugGrid\", { bounds: \"#mainWrapper\" });\n\t}, []);\n\tuseHotkeys(\"mod+alt+g\", () =>\n\t\tsetVisible(!visible) \n\t);\n\n\tconst editGridHeight = (num: number) => {\n\t\tif (gridHeight + num < 3) return;\n\t\tsetGridHeigth(gridHeight + num);\n\t};\n\n\treturn (\n\t\t<Container id=\"debugGrid\" $gridheight={gridHeight} $visible={visible}>\n\t\t\t<Action\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\teditGridHeight(-1);\n\t\t\t\t}}\n\t\t\t\tonTouchEnd={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\teditGridHeight(-1);\n\t\t\t\t}}\n\t\t\t\tclassName=\"remove\"\n\t\t\t>\n\t\t\t\t-\n\t\t\t</Action>\n\t\t\t<Action\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\teditGridHeight(1);\n\t\t\t\t}}\n\t\t\t\tonTouchEnd={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\teditGridHeight(1);\n\t\t\t\t}}\n\t\t\t\tclassName=\"add\"\n\t\t\t>\n\t\t\t\t+\n\t\t\t</Action>\n\t\t</Container>\n\t);\n};\n\nconst Container = styled.div<{ $gridheight: number; $visible: boolean }>`\n\twidth: var(--max-grid-size);\n\theight: ${({ $gridheight }) => $uw($gridheight)};\n\tposition: fixed;\n\ttop: 0;\n\tbox-sizing: border-box;\n\tz-index: ${({ $visible }) => ($visible ? 999 : `-1!important`)};\n\topacity: ${({ $visible }) => ($visible ? 1 : 0)};\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: start;\n\tpadding: ${$cssTRBL(1)};\n\n\tborder-bottom: 1px solid var(--grid-color);\n\tborder-right: 2px solid var(--grid-color);\n\tbackground-size: calc(var(--max-grid-size) / var(--grid-columns-number))\n\t\tcalc(var(--max-grid-size) / var(--grid-columns-number));\n\tbackground-image: linear-gradient(\n\t\t\tto right,\n\t\t\tvar(--grid-color) 1px,\n\t\t\ttransparent 1px\n\t\t),\n\t\tlinear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);\n`;\n\nconst Action = styled.button`\n\twidth: ${$uw(1)};\n\theight: ${$uw(1)};\n\tbox-sizing: border-box;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-radius: 100%;\n\tbackground-color: unset;\n\tfont-weight: 800;\n\tfont-size: 2.5rem;\n\tborder-width: 2px;\n\tborder-style: solid;\n\n\t${$breakPoint(380)} {\n\t\tfont-size: 1.6rem;\n\t\tborder-width: 1px;\n\t}\n\t&.remove {\n\t\tborder-color: ${$color(\"danger\")};\n\t\tcolor: ${$color(\"danger\")};\n\t}\n\t&.add {\n\t\tborder-color: ${$color(\"success\")};\n\t\tcolor: ${$color(\"success\")};\n\t}\n`;\n","export * from './functions'","import { ColorKeys, colors, isColorKey } from \"./colors\";\n\nexport const $uw = (val: number) => `calc(var(--max-grid-size) / var(--grid-columns-number) * ${val})`\n\nexport const $color = (color: ColorKeys | string) => {\n    if (isColorKey(color)) return colors[color]\n    return color\n}\nexport const $cssTRBL = (\n    top: number,\n    right: number = top,\n    bottom: number = top,\n    left: number = right\n) => `${$uw(top)} ${$uw(right)} ${$uw(bottom)} ${$uw(left)}`\n\nexport const $breakPoint = (val: number)=> `@media only screen and (max-width: ${val}px)`;","export type ColorKeys =\n  | \"primary\"\n  | \"primary-shade\"\n  | \"primary-light\"\n  | \"primary-light-shade\"\n  | \"primary-dark\"\n  | \"primary-dark-shade\"\n  | \"secondary\"\n  | \"secondary-shade\"\n  | \"secondary-light\"\n  | \"secondary-light-shade\"\n  | \"secondary-dark\"\n  | \"secondary-dark-shade\"\n  | \"tertiary\"\n  | \"tertiary-shade\"\n  | \"tertiary-light\"\n  | \"tertiary-light-shade\"\n  | \"tertiary-dark\"\n  | \"tertiary-dark-shade\"\n  | \"black\"\n  | \"black-light\"\n  | \"black-dark\"\n  | \"white-light\"\n  | \"white\"\n  | \"white-dark\"\n  | \"gray\"\n  | \"gray-light\"\n  | \"gray-dark\"\n  | \"success\"\n  | \"success-dark\"\n  | \"success-light\"\n  | \"danger\"\n  | \"danger-dark\"\n  | \"danger-light\"\n  | \"glass-dark\"\n  | \"glass\"\n  | \"glass-light\";\n\nexport const colors: Record<ColorKeys, string> = {\n  \"primary\": \"var(--primary)\",\n  \"primary-shade\": \"var(--primary-shade)\",\n  \"primary-light\": \"var(--primary-light)\",\n  \"primary-light-shade\": \"var(--primary-light-shade)\",\n  \"primary-dark\": \"var(--primary-dark)\",\n  \"primary-dark-shade\": \"var(--primary-dark-shade)\",\n  \"secondary\": \"var(--secondary)\",\n  \"secondary-shade\": \"var(--secondary-shade)\",\n  \"secondary-light\": \"var(--secondary-light)\",\n  \"secondary-light-shade\": \"var(--secondary-light-shade)\",\n  \"secondary-dark\": \"var(--secondary-dark)\",\n  \"secondary-dark-shade\": \"var(--secondary-dark-shade)\",\n  \"tertiary\": \"var(--tertiary)\",\n  \"tertiary-shade\": \"var(--tertiary-shade)\",\n  \"tertiary-light\": \"var(--tertiary-light)\",\n  \"tertiary-light-shade\": \"var(--tertiary-light-shade)\",\n  \"tertiary-dark\": \"var(--tertiary-dark)\",\n  \"tertiary-dark-shade\": \"var(--tertiary-dark-shade)\",\n  \"black\": \"var(--black)\",\n  \"black-light\": \"var(--black-light)\",\n  \"black-dark\": \"var(--black-dark)\",\n  \"white-light\": \"var(--white-light)\",\n  \"white\": \"var(--white)\",\n  \"white-dark\": \"var(--white-dark)\",\n  \"gray\": \"var(--gray)\",\n  \"gray-light\": \"var(--gray-light)\",\n  \"gray-dark\": \"var(--gray-dark)\",\n  \"success\": \"var(--success)\",\n  \"success-dark\": \"var(--success-dark)\",\n  \"success-light\": \"var(--success-light)\",\n  \"danger\": \"var(--danger)\",\n  \"danger-dark\": \"var(--danger-dark)\",\n  \"danger-light\": \"var(--danger-light)\",\n  \"glass-dark\": \"var(--glass-dark)\",\n  \"glass\": \"var(--glass)\",\n  \"glass-light\": \"var(--glass-light)\"\n};\n\nexport function isColorKey(key: string): key is ColorKeys {\n  return Object.keys(colors).includes(key);\n}"],"names":[],"version":3,"file":"index.js.map"}