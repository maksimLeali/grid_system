{"mappings":"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","sources":["src/index.ts","src/theme/index.ts","src/theme/generateCss.ts","src/theme/variables.json","src/theme/colors.ts","src/theme/createTheme.ts"],"sourcesContent":["export * from \"./theme/index\";\n\n","export { generateCss } from \"./generateCss\";\nexport { createTheme } from \"./createTheme\";\n\n\n","import defaultVariables from \"./variables.json\";\nimport { colors as defaultColors } from \"./colors\";\nexport type GridConfig = {\n  // Other grid variables (as strings)\n\n  \"max-width\"?: string;\n  \"max-grid-size\"?: string;\n  \"grid-columns-number\"?: string;\n  \"grid-color\"?: string;\n  // Optional colors key for custom color overrides/additions\n  colors?: { [color: string]: string };\n};\n\n/**\n * Merges the default grid variables with the user config and returns a CSS string.\n * \n * The `colors` key in the config will merge with default colors and add any new keys.\n *\n * @param userConfig Optional user configuration to override default variables.\n * @returns A CSS string containing the merged custom properties.\n */\nexport function generateCss(userConfig?: GridConfig): string {\n  // Merge non-color variables\n\n\n  const mergedVariables = {\n    ...defaultVariables,\n    ...userConfig\n  }\n  // @ts-ignore\n  delete mergedVariables.colors;\n\n  // Remove \"colors\" property if it exists since it is handled separately\n  const configColors = defaultVariables.colors;\n  const userColors = userConfig?.colors || {}\n\n  // Merge colors: defaults are overridden by userConfig.colors if provided\n  const mergedColors = {\n    ...configColors,\n    ...userColors,\n  };\n\n\n\n  Object.keys(userColors).map((color) => {\n    if (!defaultColors[color]) {\n      defaultColors[color] = `var(--${color})`\n    }\n  })\n\n  // Generate CSS declarations for non-color variables\n  const otherCss = Object.entries(mergedVariables)\n    .map(([key, value]) => `  --${key}: ${value};`)\n    .join(\"\\n\");\n\n  // Generate CSS declarations for colors\n  const colorCss = Object.entries(mergedColors)\n    .map(([key, value]) => `  --${key}: ${value};`)\n    .join(\"\\n\");\n\n\n  return `:root {\\n${otherCss}\\n${colorCss}\\n}`;\n}\n","{\n  \"max-width\": \"1440px\",\n  \"max-grid-size\": \"min(100vw, var(--max-width))\",\n  \"grid-columns-number\": \"48\",\n  \"grid-color\": \"#aaa7\",\n  \"colors\": {\n    \"white-light\": \"#edf6f8\",\n    \"white\": \"#daedf1\",\n    \"white-dark\": \"#b6dae2\",\n    \"black-light\": \"#18393e\",\n    \"black\": \"#2b2b2b\",\n    \"black-dark\": \"#0F0F0F\",\n    \"primary-light\": \"#117888\",\n    \"primary-light-shade\": \"#11788888\",\n    \"primary\": \"#0b505b\",\n    \"primary-shade\": \"#0b505b88\",\n    \"primary-dark\": \"#06282d\",\n    \"primary-dark-shade\": \"#06282d88\",\n    \"secondary-light\": \"#9a329a\",\n    \"secondary-light-shade\": \"#9a329a88\",\n    \"secondary\": \"#5c1e5c\",\n    \"secondary-shade\": \"#5c1e5c88\",\n    \"secondary-dark\": \"#270c27\",\n    \"secondary-dark-shade\": \"#270c2788\",\n    \"tertiary-light\": \"#99fdff\",\n    \"tertiary-light-shade\": \"#99fdff88\",\n    \"tertiary\": \"#00fbff\",\n    \"tertiary-shade\": \"#00fbff88\",\n    \"tertiary-dark\": \"#00c9cc\",\n    \"tertiary-dark-shade\": \"#00c9cc88\",\n    \"gray\": \"#9a9a9a\",\n    \"gray-light\": \"#e9e9e9\",\n    \"gray-dark\": \"#454545\",\n    \"success\": \"#2dd36f\",\n    \"success-dark\": \"#28ba62\",\n    \"success-light\": \"#42d77d\",\n    \"danger\": \"#eb445a\",\n    \"danger-dark\": \"#cf3c4f\",\n    \"danger-light\": \"#ed576b\"\n  }\n}","export type ColorKeys =\n  | \"primary\"\n  | \"primary-shade\"\n  | \"primary-light\"\n  | \"primary-light-shade\"\n  | \"primary-dark\"\n  | \"primary-dark-shade\"\n  | \"secondary\"\n  | \"secondary-shade\"\n  | \"secondary-light\"\n  | \"secondary-light-shade\"\n  | \"secondary-dark\"\n  | \"secondary-dark-shade\"\n  | \"tertiary\"\n  | \"tertiary-shade\"\n  | \"tertiary-light\"\n  | \"tertiary-light-shade\"\n  | \"tertiary-dark\"\n  | \"tertiary-dark-shade\"\n  | \"black\"\n  | \"black-light\"\n  | \"black-dark\"\n  | \"white-light\"\n  | \"white\"\n  | \"white-dark\"\n  | \"gray\"\n  | \"gray-light\"\n  | \"gray-dark\"\n  | \"success\"\n  | \"success-dark\"\n  | \"success-light\"\n  | \"danger\"\n  | \"danger-dark\"\n  | \"danger-light\"\n\nexport let colors: Record<ColorKeys | string, string> = {\n  \"primary\": \"var(--primary)\",\n  \"primary-shade\": \"var(--primary-shade)\",\n  \"primary-light\": \"var(--primary-light)\",\n  \"primary-light-shade\": \"var(--primary-light-shade)\",\n  \"primary-dark\": \"var(--primary-dark)\",\n  \"primary-dark-shade\": \"var(--primary-dark-shade)\",\n  \"secondary\": \"var(--secondary)\",\n  \"secondary-shade\": \"var(--secondary-shade)\",\n  \"secondary-light\": \"var(--secondary-light)\",\n  \"secondary-light-shade\": \"var(--secondary-light-shade)\",\n  \"secondary-dark\": \"var(--secondary-dark)\",\n  \"secondary-dark-shade\": \"var(--secondary-dark-shade)\",\n  \"tertiary\": \"var(--tertiary)\",\n  \"tertiary-shade\": \"var(--tertiary-shade)\",\n  \"tertiary-light\": \"var(--tertiary-light)\",\n  \"tertiary-light-shade\": \"var(--tertiary-light-shade)\",\n  \"tertiary-dark\": \"var(--tertiary-dark)\",\n  \"tertiary-dark-shade\": \"var(--tertiary-dark-shade)\",\n  \"black\": \"var(--black)\",\n  \"black-light\": \"var(--black-light)\",\n  \"black-dark\": \"var(--black-dark)\",\n  \"white-light\": \"var(--white-light)\",\n  \"white\": \"var(--white)\",\n  \"white-dark\": \"var(--white-dark)\",\n  \"gray\": \"var(--gray)\",\n  \"gray-light\": \"var(--gray-light)\",\n  \"gray-dark\": \"var(--gray-dark)\",\n  \"success\": \"var(--success)\",\n  \"success-dark\": \"var(--success-dark)\",\n  \"success-light\": \"var(--success-light)\",\n  \"danger\": \"var(--danger)\",\n  \"danger-dark\": \"var(--danger-dark)\",\n  \"danger-light\": \"var(--danger-light)\"\n};\n","// src/theme/createTheme.ts\nimport defaultVariables from \"./variables.json\";\nimport { generateCss, GridConfig } from \"./generateCss\";\n\n\nexport const $uw = (val: number): string => {\n    return `calc(var(--max-grid-size) / var(--grid-columns-number) * ${val})`;\n};\n\nexport function $variable(name: string): string {\n    return `var(--${name})`\n}\n\nexport const $cssTRBL = (\n    top: number,\n    right: number = top,\n    bottom: number = top,\n    left: number = right\n): string => {\n    return `${$uw(top)} ${$uw(right)} ${$uw(bottom)} ${$uw(left)}`;\n};\n\nexport const $breakPoint = (val: number): string => {\n    return `@media only screen and (max-width: ${val}px)`;\n};\n\n\n\nexport interface Theme {\n  css: string;\n  colors: Record<string, string>;\n  $uw: typeof $uw;\n  $color: (color: string)=> string;\n  $cssTRBL: typeof $cssTRBL;\n  $variable: typeof $variable;\n  $breakPoint: typeof $breakPoint;\n}\n\n/**\n * Creates a theme object by merging the default configuration with user-provided overrides.\n * Returns a theme object containing:\n *  - The generated CSS string,\n *  - The merged colors object,\n *  - Utility functions for working with theme values.\n *\n * @param userConfig Optional user configuration to override default variables.\n * @returns A Theme object.\n */\nexport function createTheme(userConfig?: GridConfig): Theme {\n  // Merge non-color variables\n  const mergedVariables = {\n    ...defaultVariables,\n    ...userConfig,\n  };\n\n  // Remove colors from merged variables since it's handled separately\n  // @ts-ignore\n  delete mergedVariables.colors;\n\n  // Merge colors: userColors will override default colors if provided\n  const configColors = defaultVariables.colors;\n  const userColors = userConfig?.colors || {};\n  const mergedColors = {\n    ...configColors,\n    ...userColors,\n  };\n\n\n  const $color = (color: string)=>{\n    // @ts-ignore\n    return color in mergedColors ? mergedColors[color] : color\n  }\n\n  // Generate the CSS string with the merged configuration and colors\n  const css = generateCss({\n    ...mergedVariables,\n    colors: mergedColors,\n  });\n\n  return {\n    css,\n    colors: mergedColors,\n    $uw,\n    $color,\n    $variable,\n    $cssTRBL,\n    $breakPoint,\n  };\n}\n"],"names":[],"version":3,"file":"index.js.map"}